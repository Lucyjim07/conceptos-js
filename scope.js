// SCOPE: El scope o √°mbito es desde d√≥nde puedo acceder al valor de una variable y se define al declarar la variabla, existen varios tipos:

// Global: Se puede acceder en cualquier parte del archivo, se declara en cualquier parte del archivo pero fuera de cualquier funci√≥n
// Local: Una variable es accesible dentro de la funci√≥n, se declara dentro de la funci√≥n y es accesible en cualquier parte dentro de la funci√≥n.
// Bloque: Se declara dentro de un bloque de c√≥digo encerrado por { }, puede ser en un condicional (if) o en un cliclo (for)

// En donde se crea o declara una variable define su scope, es decir define en donde esa variable funciona y puedo acceder a su valor.


// Scope con variables de tipo let y const, pueden tener scope global, local y bloque

let variableGlobalLet = 'üåé' // Declaraci√≥n y asignaci√≥n de la variable global

// Impresi√≥n de variables a nivel Global
console.log(`Desd el archivo js - ${variableGlobalLet}`);   /* ‚úÖ Si funciona porque la declaraci√≥n existe */
console.log(`Desd el archivo js - ${variableLocalLet}`);    /* ‚ùå No funciona porque no se ha declarado a√∫n */
console.log(`Desd el archivo js - ${variableBloqueLet}`);   /* ‚ùå No funciona porque no se ha declarado a√∫n */
console.log('-------------')

function nombreFuncion() {
    let variableLocalLet = 'üè†' // Declaraci√≥n y asignaci√≥n de la variable local

    // Impresi√≥n de variables a nivel Local
    console.log(`Desd la funcion js - ${variableGlobalLet}`);   /* ‚úÖ Si funciona porque la declaraci√≥n existe */
    console.log(`Desd la funcion js - ${variableLocalLet}`);    /* ‚úÖ Si funciona porque la declaraci√≥n existe */
    console.log(`Desd la funcion js - ${variableBloqueLet}`);   /* ‚ùå No funciona porque no se ha declarado a√∫n */

    console.log('-------------')

    if (true) {
        let variableBloqueLet = 'üåû' // Declaraci√≥n y asignaci√≥n de la variable bloque

        // Impresi√≥n de variables a nivel bloque
        console.log(`Desd el bloque condicional js - ${variableGlobalLet}`);    /* ‚úÖ Si funciona porque la declaraci√≥n existe */
        console.log(`Desd el bloque condicional js - ${variableLocalLet}`);     /* ‚úÖ Si funciona porque la declaraci√≥n existe */
        console.log(`Desd el bloque condicional js - ${variableBloqueLet}`);    /* ‚úÖ Si funciona porque la declaraci√≥n existe */
    }
}

nombreFuncion();

